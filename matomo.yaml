apiVersion: v1
kind: Template
metadata:
  name: matomo
  annotations:
    description: "Liberating Analytics. Matomo is the only web and mobile analytics platform that gives you full control over your data and more."
    tags: "analytics,piwik,matomo"
    iconClass: fa-cloud-upload
    template.openshift.io/provider-display-name: "tobrunet"
    template.openshift.io/documentation-url: "https://github.com/siavash9000/piwik-openshift/blob/master/README.md"
    template.openshift.io/support-url: "https://github.com/siavash9000/piwik-openshift/issues"
parameters:
- name: APP_URL
  description: Application URL of Matomo (Route/host)
  required: true
- name: MATOMO_IMAGE_SOURCE
  description: Source of the Matomo Docker Image to deploy
  value: docker.io/piwik
- name: MATOMO_IMAGE_TAG
  description: Tag of the Matomo Docker Image to deploy
  value: 3-fpm
- name: PVC_SIZE_CONFIG
  description: PVC size for config files
  value: 1Gi
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: app-config
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PVC_SIZE_CONFIG}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: matomo
    name: matomo
  spec:
    replicas: 1
    selector:
      app: matomo
      deploymentconfig: matomo
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: matomo
          deploymentconfig: matomo
      spec:
        containers:
        - image: bitnami/matomo:3.11.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9000
            timeoutSeconds: 5
          name: matomo
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9000
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/www/html
            name: matomo-source
          - mountPath: /var/www/html/config
            name: app-config
        - image: bitnami/nginx:1.16.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          name: nginx
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/www/html
            name: matomo-source
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: matomo-source
        - name: app-config
          persistentVolumeClaim:
            claimName: app-config
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: matomo
    name: matomo
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: matomo
      deploymentconfig: matomo
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: matomo
  spec:
    host: ${APP_URL}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: matomo
      weight: 100
    wildcardPolicy: None